volumes:
  production_redis_data: { }
  production_postgres_data: { }

services:
  postgres:
    image: postgres:16
    container_name: evmx_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: evmx

  redis:
    image: redis:7
    container_name: evmx_redis
    volumes:
      - production_redis_data:/data

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: evmx_django
    container_name: evmx_django
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.production
    healthcheck:
      test: [ "CMD", "timeout", "1", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/8000 || exit 1" ]
      interval: 1s
      timeout: 1s
      retries: 30
      start_period: 30s
    command: /start

  celeryworker:
    <<: *django
    image: evmx_celeryworker
    container_name: evmx_celeryworker
    depends_on:
      django:
        condition: service_healthy
    healthcheck:
      test: [ 'CMD','true' ]
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: evmx_celerybeat
    container_name: evmx_celerybeat
    depends_on:
      - celeryworker
    healthcheck:
      test: [ 'CMD','true' ]
    command: /start-celerybeat

  monitoring:
    <<: *django
    image: evmx_monitoring
    container_name: evmx_monitoring
    depends_on:
      - celerybeat
    healthcheck:
      test: [ 'CMD','true' ]
    restart: always
    command: /start-monitoring

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: evmx_nginx
    container_name: evmx_nginx
    depends_on:
      - django
    ports:
      - '0.0.0.0:9527:80'

# Generated by Django 4.2.14 on 2024-07-21 06:41

import django.db.models.deletion
import simple_history.models
from django.db import migrations, models

import common.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("chains", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalProject",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("appid", models.CharField(db_index=True, max_length=255)),
                (
                    "name",
                    models.CharField(db_index=True, default="默认项目", max_length=255),
                ),
                (
                    "ip_white_list",
                    models.TextField(
                        blank=True,
                        help_text="只有符合白名单的 IP 才可以与本网关交互;支持 IP 地址或 IP 网段;可同时设置多个,中间用英文逗号','分割;",
                        verbose_name="IP白名单",
                    ),
                ),
                (
                    "webhook",
                    models.URLField(
                        help_text="用于本网关发送通知到项目后端;",
                        max_length=256,
                        verbose_name="Webhook回调地址",
                    ),
                ),
                (
                    "notification_failed_times",
                    models.PositiveIntegerField(default=0, verbose_name="通知失败数"),
                ),
                (
                    "next_notification_time",
                    models.DateTimeField(blank=True, editable=False),
                ),
                (
                    "pre_notify",
                    models.BooleanField(
                        default=False,
                        help_text="刚出块的时候通知一次",
                        verbose_name="开启预通知",
                    ),
                ),
                (
                    "hmac_key",
                    models.CharField(
                        help_text="用于本网关与项目后端的交互签名;",
                        max_length=256,
                        verbose_name="HMAC密钥",
                    ),
                ),
                (
                    "collection_address",
                    common.fields.ChecksumAddressField(
                        db_index=True,
                        help_text="用户支付和充值的代币,将自动归集到此地址;",
                        max_length=42,
                        null=True,
                        verbose_name="代币归集地址",
                    ),
                ),
                (
                    "gather_worth",
                    models.DecimalField(
                        decimal_places=2,
                        default=10,
                        help_text="某充币地址中,若某代币的价值大于此,则自动归集;",
                        max_digits=10,
                        verbose_name="自动归集价值(USD)",
                    ),
                ),
                (
                    "gather_time",
                    models.PositiveIntegerField(
                        default=32,
                        help_text="某充币地址中,若某代币大于此周期未进行归集操作,则自动归集;",
                        verbose_name="自动归集周期(日)",
                    ),
                ),
                (
                    "minimal_gather_worth",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        help_text="某充币地址中,若某代币的价值小于此,即使满足自动归集的条件,也不会执行归集操作;此值是为了防止Gas成本大于归集代币的价值;",
                        max_digits=10,
                        verbose_name="最小归集价值(USD)",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical 项目配置",
                "verbose_name_plural": "historical 项目配置",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("appid", models.CharField(max_length=255, unique=True)),
                (
                    "name",
                    models.CharField(default="默认项目", max_length=255, unique=True),
                ),
                (
                    "ip_white_list",
                    models.TextField(
                        blank=True,
                        help_text="只有符合白名单的 IP 才可以与本网关交互;支持 IP 地址或 IP 网段;可同时设置多个,中间用英文逗号','分割;",
                        verbose_name="IP白名单",
                    ),
                ),
                (
                    "webhook",
                    models.URLField(
                        help_text="用于本网关发送通知到项目后端;",
                        max_length=256,
                        verbose_name="Webhook回调地址",
                    ),
                ),
                (
                    "notification_failed_times",
                    models.PositiveIntegerField(default=0, verbose_name="通知失败数"),
                ),
                ("next_notification_time", models.DateTimeField(auto_now_add=True)),
                (
                    "pre_notify",
                    models.BooleanField(
                        default=False,
                        help_text="刚出块的时候通知一次",
                        verbose_name="开启预通知",
                    ),
                ),
                (
                    "hmac_key",
                    models.CharField(
                        help_text="用于本网关与项目后端的交互签名;",
                        max_length=256,
                        verbose_name="HMAC密钥",
                    ),
                ),
                (
                    "collection_address",
                    common.fields.ChecksumAddressField(
                        db_index=True,
                        help_text="用户支付和充值的代币,将自动归集到此地址;",
                        max_length=42,
                        null=True,
                        verbose_name="代币归集地址",
                    ),
                ),
                (
                    "gather_worth",
                    models.DecimalField(
                        decimal_places=2,
                        default=10,
                        help_text="某充币地址中,若某代币的价值大于此,则自动归集;",
                        max_digits=10,
                        verbose_name="自动归集价值(USD)",
                    ),
                ),
                (
                    "gather_time",
                    models.PositiveIntegerField(
                        default=32,
                        help_text="某充币地址中,若某代币大于此周期未进行归集操作,则自动归集;",
                        verbose_name="自动归集周期(日)",
                    ),
                ),
                (
                    "minimal_gather_worth",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        help_text="某充币地址中,若某代币的价值小于此,即使满足自动归集的条件,也不会执行归集操作;此值是为了防止Gas成本大于归集代币的价值;",
                        max_digits=10,
                        verbose_name="最小归集价值(USD)",
                    ),
                ),
                (
                    "system_account",
                    models.OneToOneField(
                        help_text="提币时,系统通过此账户发送代币到用户地址;要保证此地址的 Gas 和各代币充盈,否则提币无法成功;",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="project",
                        to="chains.account",
                        verbose_name="系统账户",
                    ),
                ),
            ],
            options={
                "verbose_name": "项目配置",
                "verbose_name_plural": "项目配置",
            },
        ),
    ]
